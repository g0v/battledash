// Generated by LiveScript 1.3.0
ld$.find(document, "[ld-scope=image]").map(function(root){
  var ldf;
  ldf = new ldFile({
    root: ld$.find(root, 'input', 0)
  });
  return ldf.on('load', function(it){
    var url;
    url = URL.createObjectURL(it[0].file);
    return ld$.find(root, '[ld=preview]', 0).style.backgroundImage = "url(" + url + ")";
  });
});
ld$.find(document, "[ld-scope=slider]").map(function(root){
  var ldrs;
  ldrs = new ldSlider({
    root: ld$.find(root, '.ldrs', 0),
    min: 30,
    max: 50,
    step: 0.01
  });
  return ldrs.input.setAttribute('type', 'text');
});
ld$.find(document, "[ld-scope=date]").map(function(root){
  return flatpickr(ld$.find(root, 'input', 0), {});
});
ld$.find(document, "[ld-scope=richtext]").map(function(root){
  var view;
  return view = new ldView({
    root: root,
    action: {
      click: {
        toggle: function(){
          view.getAll('panel').map(function(it){
            return it.classList.add('d-none');
          });
          return view.getAll('toggle').map(function(it){
            return it.classList.remove('active');
          });
        },
        edit: function(){
          view.get('panel-edit').classList.remove('d-none');
          return view.get('edit').classList.add('active');
        },
        preview: function(){
          view.get('panel-preview').classList.remove('d-none');
          return view.get('preview').classList.add('active');
        }
      },
      input: {
        "panel-edit": function(){
          var ret;
          ret = DOMPurify.sanitize(marked(view.get('panel-edit').value));
          return ld$.find(view.get('panel-preview'), '.card-body', 0).innerHTML = ret;
        }
      }
    },
    handler: {
      panel: function(){}
    }
  });
});
ld$.find(document, "[ld-scope=select]").map(function(root){
  var view;
  return view = new ldView({
    root: root,
    action: {
      input: {
        select: function(arg$){
          var node, that;
          node = arg$.node;
          if (that = view.get('input')) {
            return that.classList.toggle('d-none', node.value === '_other');
          }
        }
      }
    }
  });
});
ld$.find(document, "[ld-scope=multiple]").map(function(root){
  var view;
  return view = new ldView({
    root: root,
    action: {
      click: {
        choice: function(arg$){
          var node;
          node = arg$.node;
          return node.classList.toggle('active');
        }
      }
    }
  });
});
ld$.find(document, "[ld-scope=tags]").map(function(root){
  return new Tagify(ld$.find(root, 'textarea', 0));
});